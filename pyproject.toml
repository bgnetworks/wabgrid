[build-system]
# Minimum requirements for the build system to execute.
requires = [
    "setuptools>=47.2.0",
    "wheel",
    "setuptools_scm[toml]",
    "fastentrypoints; python_version=='3.7'",
]
build-backend = "setuptools.build_meta"

[project]
name = "wabgrid"
authors = [
  { name="Kurt Snieckus", email="kurt.snieckus@bgnetworks.com" },
  { name="Rouven Czerwinski", email="entwicklung@pengutronix.de" },
  { name="Jan Luebbe", email="entwicklung@pengutronix.de" },
]
description = "Windows port of Linux based embedded systems control library for development, testing and installation"
readme = "README.rst"
license = { file="LICENSE" }
requires-python = ">=3.7"
classifiers = [
    "Topic :: Software Development :: Testing",
    "Framework :: Pytest",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "ansicolors==1.1.8",
    "attrs==21.4.0",
    "autobahn==21.3.1",
    "jinja2==3.0.2",
    "packaging==21.0",
    "pyserial-labgrid>=3.4.0.1",
    "pytest==7.2.2",
    "pyusb==1.2.1",
    "PyYAML==6.0.1",
    "requests==2.26.0",
    "xmodem==0.4.6",
    "pexpect==4.9.0",
]
dynamic = ["version"]  # via setuptools_scm

[project.urls]
"Homepage" = "https://github.com/bgnetworks/wabgrid"
"Bug Tracker" = "https://github.com/bgnetworks/wabgrid/issues"

[project.optional-dependencies]
crossbar = [
    "crossbar==21.3.1",
    "werkzeug>=0.14.1,<2.1",
]
doc = [
    "docutils==0.17.1",
    "Sphinx==4.2.0",
    "sphinx_rtd_theme==1.0.0",
]
docker = ["docker==5.0.2"]
graph = ["graphviz==0.17.0"]
kasa = ["python-kasa==0.4.0"]
modbus = ["pyModbusTCP==0.1.10"]
modbusrtu = ["minimalmodbus==1.0.2"]
mqtt = ["paho-mqtt==1.5.1"]
onewire = ["onewire==0.2"]
pyvisa = [
    "pyvisa==1.11.3",
    "PyVISA-py==0.5.2",
]
snmp = [
    "pysnmp==4.4.12",
    "pysnmp-mibs==0.1.6",
]
vxi11 = ["python-vxi11==0.9"]
xena = ["xenavalkyrie==3.0.1"]
deb = [
    # labgrid[crossbar]
    "crossbar==21.3.1",
    "werkzeug>=0.14.1,<2.1",

    # labgrid[modbus]
    "pyModbusTCP==0.1.10",

    # labgrid[onewire]
    "onewire==0.2",

    # labgrid[snmp]
    "pysnmp==4.4.12",
    "pysnmp-mibs==0.1.6",
]
dev = [
    # references to other optional dependency groups
    # labgrid[crossbar]
    "crossbar==21.3.1",
    "werkzeug>=0.14.1,<2.1",

    # labgrid[doc]
    "docutils==0.17.1",
    "Sphinx==4.2.0",
    "sphinx_rtd_theme==1.0.0",

    # labgrid[docker]
    "docker==5.0.2",

    # labgrid[graph]
    "graphviz==0.17.0",

    # labgrid[kasa]
    "python-kasa==0.4.0",

    # labgrid[modbus]
    "pyModbusTCP==0.1.10",

    # labgrid[modbusrtu]
    "minimalmodbus==1.0.2",

    # labgrid[mqtt]
    "paho-mqtt==1.5.1",

    # labgrid[onewire]
    "onewire==0.2",

    # labgrid[pyvisa]
    "pyvisa==1.11.3",
    "PyVISA-py==0.5.2",

    # labgrid[snmp]
    "pysnmp==4.4.12",
    "pysnmp-mibs==0.1.6",

    # labgrid[vxi11]
    "python-vxi11==0.9",

    # additional dev dependencies
    "psutil==5.8.0",
    "pytest-cov==3.0.0",
    "pytest-dependency==0.5.1",
    "pytest-isort==2.0.0",
    "pytest-mock==3.6.1",
    "pylint==2.17.7",
    "pytest-pylint==0.18.0",
]

[project.scripts]
wabgrid-client = "wabgrid.remote.client:main"
wabgrid-exporter = "wabgrid.remote.exporter:main"
wabgrid-suggest = "wabgrid.resource.suggest:main"

# the following makes a plugin available to pytest
[project.entry-points.pytest11]
wabgrid = "wabgrid.pytestplugin"

[tool.setuptools]
packages = [
    "wabgrid",
    "wabgrid.driver",
    "wabgrid.protocol",
    "wabgrid.resource",
    "wabgrid.strategy",
    "wabgrid.util",
    "wabgrid.util.agents",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
version_scheme = "no-guess-dev"
root = ".."

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "wabgrid",
]
addopts = "-p no:wabgrid"

[tool.pylint.imports]
ignored-modules = ["gi"]

[tool.pylint."messages control"]
# disable all, then enable explicitly
disable = ["all"]
enable = [
    "F", # all checks from fatal category
    "E", # all checks from error category

    # warning checks (sorted alphabetically)
    'deprecated-argument',
    'deprecated-class',
    'deprecated-decorator',
    'deprecated-method',
    'deprecated-module',
    'duplicate-key',
    'expression-not-assigned',
    'f-string-without-interpolation',
    'import-self',
    'keyword-arg-before-vararg',
    'logging-format-interpolation',
    'logging-fstring-interpolation',
    'logging-not-lazy',
    'pointless-statement',
    'pointless-string-statement',
    'redefined-builtin',
    'redefined-outer-name',
    'reimported',
    'unknown-option-value',
    'unnecessary-semicolon',
    'unreachable',
    'unused-import',
    'unused-variable',
    'useless-else-on-loop',
    'using-constant-test',
    'wildcard-import',

    # convention checks (sorted alphabetically)
    "wrong-import-order",

    # refactor checks (sorted alphabetically)
    "redefined-argument-from-local",
]

[tool.pylint.typecheck]
generated-members = [
    "wabgrid.driver.*",
    "wabgrid.strategy.*",
]
signature-mutators = ["wabgrid.step.step"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311
isolated_build = true

[testenv]
extras = dev
passenv = TERM
commands =
  pytest tests {posargs} \
    --cov={envsitepackagesdir}/wabgrid \
    --cov-report=html:htmlcov

[testenv:lint]
extras = dev
commands = pylint -f colorized wabgrid
"""
